.form {
  display: flex;
  flex-direction: column;
  gap: var(--space);
}

.field {
  display: flex;
  flex-direction: column;
  font-family: var(--font-ui);
  margin-block-end: var(--space-xl);
  margin-inline: auto;
  padding-inline: var(--space-xl);
  width: min(var(--content-width), 100%);

  label {
    font-size: var(--type-size);
    font-weight: 700;
    font-variation-settings: 'wght' 700;
    color: hsl(var(--fg-contrast));
  }

  .comment {
    font-size: var(--type-size-6);
    margin: 0;
    color: hsl(var(--fg-default));
  }

  input,
  select,
  textarea {
    background-color: hsl(var(--neutral-100));
    border-radius: var(--radius-4);
    border: none;
    box-shadow: 0 0 0 1px hsl(var(--d-contrast) / 15%);
    font-family: var(--font-ui);
    font-size: var(--type-size);
    margin-block-start: var(--space-xxs);
    padding-block: var(--space-xs);
    padding-inline: var(--space);
    transition: all 300ms;

    @include focus(hsl(var(--primary-500)));

    &:hover {
      background-color: hsl(var(--neutral-100) / 0);
    }
  }

  textarea {
    margin-block-start: var(--space);
    min-height: 7lh;
    resize: block;
  }
}

.option-list {
  display: flex;
  gap: var(--space);
  flex-wrap: wrap;
  padding-block: var(--space-xs);

  .option {
    flex: 1;
  }
}

.option {
  background-color: hsl(var(--neutral-100));
  border-radius: var(--radius-5);
  box-shadow: 0 0 0 1px hsl(var(--d-contrast) / 15%);
  column-gap: var(--space);
  display: grid;
  gap: 0;
  grid-template-columns: min-content auto;
  grid-template-rows: repeat(2, min-content);
  padding-inline: var(--space);
  position: relative;
  column-gap: var(--space);

  &:hover {
    background-color: hsl(var(--neutral-100) / 75%);
  }

  &:focus-within {
    outline: 5px solid hsl(var(--primary-500));
  }

  .material-symbol {
    font-size: var(--type-size-2);
    color: hsl(var(--primary-700));
    grid-column: 1/2;
    grid-row: 1/-1;
  }

  label {
    grid-row: 1/2;
    grid-column: 2/3;
    align-self: end;
    white-space: nowrap;

    &::after {
      content: '';
      position: absolute;
      cursor: pointer;
      inset: 0;
    }
  }

  &:has(input:checked) {
    background-color: hsl(var(--l-primary-500));
    color: hsl(var(--l-neutral-100));
    box-shadow: 0 0 1px hsl(var(--l-primary-700));

    * {
      color: inherit;
    }
  }


}