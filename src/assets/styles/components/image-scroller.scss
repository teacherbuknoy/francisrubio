.image-scroller {
  align-items     : center;
  display         : flex;
  gap             : 3ch;
  list-style      : none;
  margin          : 0;
  overflow        : auto;
  scroll-behavior : smooth;
  scroll-snap-type: x mandatory;

  img,
  .image-card {
    border-radius    : var(--ideal-radius);
    object-fit       : cover;
    scroll-snap-align: center;
    width            : auto;
    margin           : 0;
  }

  img {
    height: 100%;
  }

  &>img {
    height: 25ch;
  }

  &--gallery {
    column-width  : 30ch;
    display       : block;
    flex-direction: column;
    gap           : 1ch;
    grid-column   : 1/-1;

    @at-root &.image-scroller img,
    & .image-card {
      aspect-ratio    : auto !important;
      break-inside    : avoid;
      height          : auto;
      margin-block-end: 1ch;
    }

  &:has(> :only-child) {
    display: grid;
    place-content: center;

    .image-card {
      width: min(calc(var(--content-width) / 2), 90%);
      margin-inline: auto;
    }
  }
  }

  &--grid {
    display              : grid;
    grid-template-columns: repeat(auto-fit, minmax(10ch, 1fr));
    gap                  : 1ch;
  }
}

.image-card {
  display              : grid;
  grid-template-columns: 1fr;
  overflow             : clip;
  height               : 40ch;
  flex                 : 1 0 35ch;

  a {
    cursor: zoom-in;
  }

  &> :is(figcaption, a, img, iframe) {
    grid-column: 1/2;
    grid-row   : 1/2;
    height     : 100%;
  }

  figcaption {
    background-image   : linear-gradient(to bottom, transparent, black);
    background-position: bottom center;
    background-repeat  : no-repeat;
    background-size    : 100% 50%;
    color              : hsl(var(--l-contrast));
    display            : flex;
    flex-direction     : column;
    font-family        : var(--font-sans);
    font-size          : var(--type-size-7);
    justify-content    : end;
    padding            : var(--space-s);
    pointer-events     : none;
    z-index            : 2;

    p {
      margin: 0;

    }
    
    &:has(a, button) {
      pointer-events: visible;

      :is(a, button) {
        cursor: pointer;
      }
    }
  }
}